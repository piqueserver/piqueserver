import json

# Load the JSON report generated by coverage.py
with open("coverage.json") as f:
    data = json.load(f)

html_lines = []
html_lines.append("<html>")
html_lines.append("<head>")
html_lines.append("<meta charset='UTF-8'>")
html_lines.append("<title>Function Branch Coverage Report</title>")
html_lines.append("<style>")
html_lines.append("body { font-family: Arial, sans-serif; margin: 20px; }")
html_lines.append("table { border-collapse: collapse; width: 100%; margin-bottom: 20px; }")
html_lines.append("th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }")
html_lines.append("th { background-color: #f2f2f2; }")
html_lines.append("</style>")
html_lines.append("</head>")
html_lines.append("<body>")
html_lines.append("<h1>Function Branch Coverage Report</h1>")

# Process each file from the JSON report
for filename, details in data.get("files", {}).items():
    functions = details.get("functions", {})
    # Skip files with no function-level information
    if not functions:
        continue

    html_lines.append(f"<h2>File: {filename}</h2>")
    html_lines.append("<table>")
    html_lines.append("<tr>")
    html_lines.append("<th>Function Name</th>")
    html_lines.append("<th>Num Branches</th>")
    html_lines.append("<th>Covered Branches</th>")
    html_lines.append("<th>Missing Branches</th>")
    html_lines.append("<th>Branch Coverage (%)</th>")
    html_lines.append("</tr>")

    # Iterate over each function in the file
    for func_name, func_details in functions.items():
        summary = func_details.get("summary", {})
        num_branches = summary.get("num_branches", 0)
        covered_branches = summary.get("covered_branches", 0)
        missing_branches = summary.get("missing_branches", 0)

        # Compute branch coverage percentage, if branches exist
        if num_branches:
            branch_percent = (covered_branches / num_branches) * 100
            branch_percent = f"{branch_percent:.1f}"
        else:
            branch_percent = "N/A"

        # If the function name is empty, denote it as Global Scope
        display_name = func_name if func_name.strip() else "Global Scope"
        html_lines.append("<tr>")
        html_lines.append(f"<td>{display_name}</td>")
        html_lines.append(f"<td>{num_branches}</td>")
        html_lines.append(f"<td>{covered_branches}</td>")
        html_lines.append(f"<td>{missing_branches}</td>")
        html_lines.append(f"<td>{branch_percent}</td>")
        html_lines.append("</tr>")
    html_lines.append("</table>")
    
html_lines.append("</body></html>")

# Write the HTML to a file
with open("branch_coverage.html", "w", encoding="utf-8") as f:
    f.write("\n".join(html_lines))

print("HTML branch coverage report generated as 'branch_coverage.html'")
